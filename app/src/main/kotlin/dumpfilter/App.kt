/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package dumpfilter

import java.io.File

fun main(args: Array<String>) {

    val assumedFile = args.firstOrNull()
    if (assumedFile != null) {
        val f = File(assumedFile)
        if (f.isFile) {
            if (f.exists()) {
                var inLogcatSection = false
                val out = File("output.txt")
                if (out.exists()) {
                    out.delete()
                }
                out.createNewFile()
                val writer = out.bufferedWriter()
                var readl = 0
                f.bufferedReader().useLines {
                    it.forEach { line ->
                        readl++

                        val logcatBeginIndicator = "------ SYSTEM LOG"
                        val endIndicator =
                            "-------------------------------------------------------------------------------"
                        if (line.startsWith(logcatBeginIndicator)) {
                            inLogcatSection = true
                        }

                        if (inLogcatSection) {
                            writer.appendLine(line)
                        }

                        if (inLogcatSection && line.startsWith(endIndicator)) {
                            inLogcatSection = false
                        }
                    }
                }
                writer.newLine()
                writer.write("read $readl lines")
                writer.flush()
                writer.close()

            } else {
                throw Exception("First arg should be an exisiting file")
            }
        } else {
            throw Exception("First arg should be a file")
        }
    } else {
        throw Exception("First arg should not be empty")
    }

}
